{"ast":null,"code":"export const fetchSchedule = (year, month, team) => {\n  const apiUrl = `http://localhost:5001/api/schedule?year=${year}&month=${month}&team=${team}`;\n  return fetch(apiUrl) // Fetch를 사용하면 Promise를 반환\n  .then(response => {\n    if (!response.ok) {\n      throw new Error(\"API 요청 실패\");\n    }\n    return response.json(); // JSON 응답 변환\n  }).catch(error => {\n    console.error(\"API 호출 오류:\", error);\n    throw error; // 호출 측으로 전달\n  });\n};","map":{"version":3,"names":["fetchSchedule","year","month","team","apiUrl","fetch","then","response","ok","Error","json","catch","error","console"],"sources":["/Users/flsgk/Desktop/harin/supercoding/winning-pixie/win/src/api/scheduleApi.js"],"sourcesContent":["export const fetchSchedule = (year, month, team) => {\n  const apiUrl = `http://localhost:5001/api/schedule?year=${year}&month=${month}&team=${team}`;\n\n  return fetch(apiUrl) // Fetch를 사용하면 Promise를 반환\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(\"API 요청 실패\");\n      }\n      return response.json(); // JSON 응답 변환\n    })\n    .catch((error) => {\n      console.error(\"API 호출 오류:\", error);\n      throw error; // 호출 측으로 전달\n    });\n};\n"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAGA,CAACC,IAAI,EAAEC,KAAK,EAAEC,IAAI,KAAK;EAClD,MAAMC,MAAM,GAAG,2CAA2CH,IAAI,UAAUC,KAAK,SAASC,IAAI,EAAE;EAE5F,OAAOE,KAAK,CAACD,MAAM,CAAC,CAAC;EAAA,CAClBE,IAAI,CAAEC,QAAQ,IAAK;IAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,WAAW,CAAC;IAC9B;IACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;EAC1B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;IAClC,MAAMA,KAAK,CAAC,CAAC;EACf,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}