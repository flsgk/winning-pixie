{"ast":null,"code":"var _jsxFileName = \"/Users/flsgk/Desktop/harin/supercoding/winning-pixie/win/src/components/SelectTeam.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./SelectTeam.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst teams = [{\n  fullName: \"두산 베어스\",\n  shortName: \"두산\"\n}, {\n  fullName: \"LG 트윈스\",\n  shortName: \"LG\"\n}, {\n  fullName: \"한화 이글스\",\n  shortName: \"한화\"\n}, {\n  fullName: \"삼성 라이온즈\",\n  shortName: \"삼성\"\n}, {\n  fullName: \"KIA 타이거즈\",\n  shortName: \"KIA\"\n}, {\n  fullName: \"롯데 자이언츠\",\n  shortName: \"롯데\"\n}, {\n  fullName: \"NC 다이노스\",\n  shortName: \"NC\"\n}, {\n  fullName: \"키움 히어로즈\",\n  shortName: \"키움\"\n}, {\n  fullName: \"SSG 랜더스\",\n  shortName: \"SSG\"\n}, {\n  fullName: \"KT 위즈\",\n  shortName: \"KT\"\n}];\nfunction SelectTeam() {\n  _s();\n  const [selectedTeam, setSelectedTeam] = useState(null);\n  const navigate = useNavigate();\n  const handleSelectTeam = team => {\n    setSelectedTeam(team);\n  };\n  const handleConfirm = () => {\n    if (SelectTeam) {\n      localStorage.setItem(\"selectedTeam\", selectedTeam.shortName); // shortname으로 저장된다.\n      navigate(\"/\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"what-team\",\n      children: \"\\uC5B4\\uB5A4 \\uD300\\uC744 \\uC751\\uC6D0\\uD558\\uC2DC\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), selectedTeam && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"my-team\",\n      children: [\"\\uB098\\uC758 \\uD300 : \", selectedTeam.fullName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: teams.map((team, index // teams 배열을 순회하며 각 팀 이름에 대해서 하나의 버튼을 생성한다.\n      ) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSelectTeam(team),\n        className: `button ${selectedTeam === team ? \"selected\" : \"\"}`,\n        children: team\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"this-team\",\n      onClick: handleConfirm,\n      disabled: !selectedTeam,\n      children: \"\\uC751\\uC6D0\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(SelectTeam, \"oi0NEHaVGmB1t1Z93l8E6ryadJ4=\", false, function () {\n  return [useNavigate];\n});\n_c = SelectTeam;\nexport default SelectTeam;\nvar _c;\n$RefreshReg$(_c, \"SelectTeam\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","teams","fullName","shortName","SelectTeam","_s","selectedTeam","setSelectedTeam","navigate","handleSelectTeam","team","handleConfirm","localStorage","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/flsgk/Desktop/harin/supercoding/winning-pixie/win/src/components/SelectTeam.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./SelectTeam.css\";\n\nconst teams = [\n  { fullName: \"두산 베어스\", shortName: \"두산\" },\n  { fullName: \"LG 트윈스\", shortName: \"LG\" },\n  { fullName: \"한화 이글스\", shortName: \"한화\" },\n  { fullName: \"삼성 라이온즈\", shortName: \"삼성\" },\n  { fullName: \"KIA 타이거즈\", shortName: \"KIA\" },\n  { fullName: \"롯데 자이언츠\", shortName: \"롯데\" },\n  { fullName: \"NC 다이노스\", shortName: \"NC\" },\n  { fullName: \"키움 히어로즈\", shortName: \"키움\" },\n  { fullName: \"SSG 랜더스\", shortName: \"SSG\" },\n  { fullName: \"KT 위즈\", shortName: \"KT\" },\n];\n\nfunction SelectTeam() {\n  const [selectedTeam, setSelectedTeam] = useState(null);\n  const navigate = useNavigate();\n\n  const handleSelectTeam = (team) => {\n    setSelectedTeam(team);\n  };\n\n  const handleConfirm = () => {\n    if (SelectTeam) {\n      localStorage.setItem(\"selectedTeam\", selectedTeam.shortName); // shortname으로 저장된다.\n      navigate(\"/\");\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <p className=\"what-team\">어떤 팀을 응원하시나요?</p>\n      {selectedTeam && (\n        <p className=\"my-team\">나의 팀 : {selectedTeam.fullName}</p>\n      )}{\" \"}\n      {/* 여기서는 긴 이름으로 보여준다. */}\n      <div className=\"grid-container\">\n        {teams.map(\n          (\n            team,\n            index // teams 배열을 순회하며 각 팀 이름에 대해서 하나의 버튼을 생성한다.\n          ) => (\n            <button\n              key={index}\n              onClick={() => handleSelectTeam(team)}\n              className={`button ${selectedTeam === team ? \"selected\" : \"\"}`}\n            >\n              {team}\n            </button>\n          )\n        )}\n      </div>\n      <button\n        className=\"this-team\"\n        onClick={handleConfirm}\n        disabled={!selectedTeam}\n      >\n        응원하기\n      </button>\n    </div>\n  );\n}\n\nexport default SelectTeam;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}